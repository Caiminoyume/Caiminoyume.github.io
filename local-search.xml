<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>折腾tproxy下的一点踩坑</title>
    <link href="/2023/07/28/%E6%8A%98%E8%85%BEtproxy%E4%B8%8B%E7%9A%84%E4%B8%80%E7%82%B9%E8%B8%A9%E5%9D%91/"/>
    <url>/2023/07/28/%E6%8A%98%E8%85%BEtproxy%E4%B8%8B%E7%9A%84%E4%B8%80%E7%82%B9%E8%B8%A9%E5%9D%91/</url>
    
    <content type="html"><![CDATA[<h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>其实早在三天前我就打算写出第一篇博客了，但是由于我国互联网的特殊性，导致安装 hexo 出现了“一点点”小意外。虽然只需要设置一下命令行代理就能搞定</p><p><code>set http_proxy=http://ip:port</code></p><p>但是这件事给我了足够的动力去折腾透明网关。<del>其实早就想搞的，拖延症+懒，就。。。</del></p><h1 id="技术介绍"><a href="#技术介绍" class="headerlink" title="技术介绍"></a>技术介绍</h1><p>tproxy，意为透明代理&#x2F;透明网关，通过在路由器上运行代理软件并劫持局域网内所有流量便可实现局域网设备“无感”翻墙</p><p>它相对与传统的 http 代理或者 sock 代理有以下优点：</p><ol><li>使不支持设置代理的设备翻墙，例如 apple TV，switch等</li><li>使不遵守系统代理的软件走代理</li><li>对代理设备透明，无需对局域网中设备做任何调整</li></ol><ul><li>如果仅是第二条的话，利用 tun 模式即可实现，但这就不在本文的范围内了，请自行查阅相关资料</li><li>目前有许多十分完善的代理插件，如 <a href="https://github.com/vernesong/OpenClash">openclash</a> <a href="https://github.com/jerrykuku/luci-app-vssr">helloworld</a> <a href="https://github.com/xiaorouji/openwrt-passwall">passwall</a> 等，如果你<strong>不</strong>熟悉Linux操作&#x2F;善用Google&#x2F;懂得<a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/main/README-zh_CN.md">提问的智慧</a>，请直接使用插件</li></ul><h1 id="具体操作"><a href="#具体操作" class="headerlink" title="具体操作"></a>具体操作</h1><p>本文主要参考 <a href="https://xtls.github.io/document/level-2/transparent_proxy/transparent_proxy.html">这个</a>，本文并不打算复述该文章的内容，仅仅对该文没讲到的地方做出补充。特别的，我并没有将网关纳入透明代理中，因为我觉得没必要且相当麻烦（需要排除xray的出站流量）</p><p>总之，我最后的iptables配置如下：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-attribute">ip</span> rule add fwmark <span class="hljs-number">1</span> table <span class="hljs-number">100</span><br><span class="hljs-attribute">ip</span> route add local <span class="hljs-number">0.0.0.0</span>/<span class="hljs-number">0</span> dev lo table <span class="hljs-number">100</span><br><span class="hljs-attribute">iptables</span> -t mangle -N XRAY<br><span class="hljs-attribute">iptables</span> -t mangle -A XRAY -d <span class="hljs-number">10.0.0.0</span>/<span class="hljs-number">8</span> -j RETURN<br><span class="hljs-attribute">iptables</span> -t mangle -A XRAY -d <span class="hljs-number">100.64.0.0</span>/<span class="hljs-number">10</span> -j RETURN<br><span class="hljs-attribute">iptables</span> -t mangle -A XRAY -d <span class="hljs-number">127.0.0.0</span>/<span class="hljs-number">8</span> -j RETURN<br><span class="hljs-attribute">iptables</span> -t mangle -A XRAY -d <span class="hljs-number">169.254.0.0</span>/<span class="hljs-number">16</span> -j RETURN<br><span class="hljs-attribute">iptables</span> -t mangle -A XRAY -d <span class="hljs-number">172.16.0.0</span>/<span class="hljs-number">12</span> -j RETURN<br><span class="hljs-attribute">iptables</span> -t mangle -A XRAY -d <span class="hljs-number">224.0.0.0</span>/<span class="hljs-number">3</span> -j RETURN<br><span class="hljs-attribute">iptables</span> -t mangle -A XRAY -d <span class="hljs-number">255.255.255.255</span>/<span class="hljs-number">32</span> -j RETURN<br><span class="hljs-attribute">iptables</span> -t mangle -A XRAY ! -s <span class="hljs-number">192.168.0.0</span>/<span class="hljs-number">16</span> -j RETURN<br><span class="hljs-attribute">iptables</span> -t mangle -A XRAY -d <span class="hljs-number">192.168.0.0</span>/<span class="hljs-number">16</span> -p tcp -j RETURN<br><span class="hljs-attribute">iptables</span> -t mangle -A XRAY -d <span class="hljs-number">192.168.0.0</span>/<span class="hljs-number">16</span> -p udp ! --dport <span class="hljs-number">53</span> -j RETURN<br><span class="hljs-attribute">iptables</span> -t mangle -A XRAY -p tcp -j TPROXY --<span class="hljs-literal">on</span>-port <span class="hljs-number">12345</span> --tproxy-mark <span class="hljs-number">1</span><br><span class="hljs-attribute">iptables</span> -t mangle -A XRAY -p udp -j TPROXY --<span class="hljs-literal">on</span>-port <span class="hljs-number">12345</span> --tproxy-mark <span class="hljs-number">1</span><br><span class="hljs-attribute">iptables</span> -t mangle -A PREROUTING -j XRAY<br><br><span class="hljs-attribute">sleep</span> <span class="hljs-number">10</span><br><br><span class="hljs-attribute">ipv6</span>=$(ip -<span class="hljs-number">6</span> route show dev lo)<br><span class="hljs-attribute">ipv6_CIDR</span>=<span class="hljs-variable">$&#123;ipv6: 12: 24&#125;</span><br><span class="hljs-attribute">ip</span> -<span class="hljs-number">6</span> rule add fwmark <span class="hljs-number">1</span> table <span class="hljs-number">106</span><br><span class="hljs-attribute">ip</span> -<span class="hljs-number">6</span> route add local ::/<span class="hljs-number">0</span> dev lo table <span class="hljs-number">106</span><br><span class="hljs-attribute">ip6tables</span> -t mangle -N XRAY6<br><span class="hljs-attribute">ip6tables</span> -t mangle -A XRAY6 -d ::<span class="hljs-number">1</span>/<span class="hljs-number">128</span> -j RETURN<br><span class="hljs-attribute">ip6tables</span> -t mangle -A XRAY6 -d fe80::/<span class="hljs-number">10</span> -j RETURN<br><span class="hljs-attribute">ip6tables</span> -t mangle -A XRAY6 ! -s <span class="hljs-variable">$&#123;ipv6_CIDR&#125;</span> -j RETURN<br><span class="hljs-attribute">ip6tables</span> -t mangle -A XRAY6 -d <span class="hljs-variable">$&#123;ipv6_CIDR&#125;</span> -p tcp -j RETURN<br><span class="hljs-attribute">ip6tables</span> -t mangle -A XRAY6 -d <span class="hljs-variable">$&#123;ipv6_CIDR&#125;</span> -p udp ! --dport <span class="hljs-number">53</span> -j RETURN<br><span class="hljs-attribute">ip6tables</span> -t mangle -A XRAY6 -p udp -j TPROXY --<span class="hljs-literal">on</span>-port <span class="hljs-number">12345</span> --tproxy-mark <span class="hljs-number">1</span><br><span class="hljs-attribute">ip6tables</span> -t mangle -A XRAY6 -p tcp -j TPROXY --<span class="hljs-literal">on</span>-port <span class="hljs-number">12345</span> --tproxy-mark <span class="hljs-number">1</span><br><span class="hljs-attribute">ip6tables</span> -t mangle -A PREROUTING -j XRAY6<br></code></pre></td></tr></table></figure><h2 id="与参考文章相比，我做出哪些改变？"><a href="#与参考文章相比，我做出哪些改变？" class="headerlink" title="与参考文章相比，我做出哪些改变？"></a>与参考文章相比，我做出哪些改变？</h2><p>事实上，我主要增加了 ipv6 的部分，即便是 <a href="https://xtls.github.io/document/level-2/tproxy_ipv4_and_ipv6.html">这篇</a>，也仅仅针对使用 nat6 的网络，我相信使用 ipv6 肯定是图它全球单播的优点，不然我觉得直接关闭 ipv6 是更省事的做法（使用 fd00::&#x2F;8 是 unacceptable！！！）<br>但是针对我国 ISP 使用的动态 ipv6-pd 的问题，每次重新拨号都会使前缀变化，网段肯定不能写死在配置里，因此随系统启动时要能主动获取当前的网段：</p><ol><li>运行<code>ip -6 route show dev lo</code>获取本机的 ipv6 网段信息</li><li><code>ipv6_CIDR=$&#123;ipv6: 12: 24&#125;</code>截取网段信息</li></ol><ul><li>注意<code>ip -6 route show dev lo</code>时可能会返回多个 ipv6 地址，注意区分哪个是 pd 前缀</li><li><code>sleep 10</code>是为了等待 pppoe 拨号，拨号后才可能下发前缀</li></ul><h1 id="踩坑"><a href="#踩坑" class="headerlink" title="踩坑"></a>踩坑</h1><p>实际上，调 iptables 的配置，不能说是一番风顺吧，只能说是举步维艰<br>一些很快被发现的小问题就不说了。<del>几次写错 iptables 的规则导致 ssh 都访问不到路由器，只能断电重启</del></p><p>一开始，我对 DNS 的处理是这样的</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">iptables</span> -t mangle -A XRAY -d <span class="hljs-number">192.168.0.0</span>/<span class="hljs-number">16</span> -p tcp ! --dport <span class="hljs-number">53</span> -j RETURN<br><span class="hljs-attribute">iptables</span> -t mangle -A XRAY -d <span class="hljs-number">192.168.0.0</span>/<span class="hljs-number">16</span> -p udp ! --dport <span class="hljs-number">53</span> -j RETURN<br></code></pre></td></tr></table></figure><p>而我的 xray 路由中却是只有</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs prolog">&#123;<br>    <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;field&quot;</span>,<br>    <span class="hljs-string">&quot;inboundTag&quot;</span>: [<br>        <span class="hljs-string">&quot;all-in&quot;</span><br>    ],<br>    <span class="hljs-string">&quot;port&quot;</span>: <span class="hljs-number">53</span>,<br>    <span class="hljs-string">&quot;network&quot;</span>: <span class="hljs-string">&quot;udp&quot;</span>,<br>    <span class="hljs-string">&quot;outboundTag&quot;</span>: <span class="hljs-string">&quot;dns-out&quot;</span><br>&#125;,<br></code></pre></td></tr></table></figure><p>这就导致了局域网请求 TCP 53 时，走了<code>direct</code>，这条DNS出了 xray 又进了系统 DNS 查询，系统就先对自己的 TCP 53 端口进行了 DNS 查询，于是这条 DNS 又进了 xray，在这种递归之下，很快，xray 日志里出现了大量这样的日志</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dns"><span class="hljs-number">2023/07/26</span> <span class="hljs-number">14:12:10 192</span>.<span class="hljs-number">168.2.2</span>:<span class="hljs-number">59754</span> accepted udp:<span class="hljs-number">192.168.2.1</span>:<span class="hljs-number">53</span> [all-in -&gt; dns-out]   //udp 请求就不会，因为它正常的路由到了 dns-out<br><span class="hljs-number">2023/07/26</span> <span class="hljs-number">14:12:10 192</span>.<span class="hljs-number">168.2.2</span>:<span class="hljs-number">51312</span> accepted tcp:<span class="hljs-number">192.168.2.1</span>:<span class="hljs-number">53</span> [all-in -&gt; direct]    //这条开始引起了下面反复请求<br><span class="hljs-number">2023/07/26</span> <span class="hljs-number">14:12:10 192</span>.<span class="hljs-number">168.2.1</span>:<span class="hljs-number">34072</span> accepted tcp:<span class="hljs-number">192.168.2.1</span>:<span class="hljs-number">53</span> [all-in -&gt; direct]    //这样的请求在实际日志中持续了上百条，这里只是节选<br><span class="hljs-number">2023/07/26</span> <span class="hljs-number">14:12:10 192</span>.<span class="hljs-number">168.2.1</span>:<span class="hljs-number">34080</span> accepted tcp:<span class="hljs-number">192.168.2.1</span>:<span class="hljs-number">53</span> [all-in -&gt; direct]<br><span class="hljs-number">2023/07/26</span> <span class="hljs-number">14:12:10 192</span>.<span class="hljs-number">168.2.1</span>:<span class="hljs-number">34094</span> accepted tcp:<span class="hljs-number">192.168.2.1</span>:<span class="hljs-number">53</span> [all-in -&gt; direct]<br></code></pre></td></tr></table></figure><p>在这之后不久，软路由系统就卡死，网络完全崩了</p><p><del>当时看了半天 iptables 的原理，脑子完全僵住了，还以为是 xray 的问题，还去提了个 issue</del></p><h1 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h1><p>折腾这玩意最好先在其他设备调好再转到主路由上去，<del>否则可能引起家庭矛盾</del>，而且这一套规则可能之后还会再调，目前还发现了不少小问题</p><p>emmmmm，以后再写吧！</p>]]></content>
    
    
    
    <tags>
      
      <tag>network</tag>
      
      <tag>tproxy</tag>
      
      <tag>xray</tag>
      
      <tag>iptables</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
